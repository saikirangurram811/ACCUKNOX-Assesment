import psutil
import logging
from datetime import datetime

logging.basicConfig(
    filename="system.log",
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

def log_alert(message):
    print(message)      logging.warning(message) 
def check_cpu_usage(threshold=80):
    cpu_usage = psutil.cpu_percent(interval=1)
    if cpu_usage > threshold:
        log_alert(f"High CPU usage detected: {cpu_usage}% (Threshold: {threshold}%)")

def check_memory_usage(threshold=80):
    memory = psutil.virtual_memory()
    memory_usage = memory.percent
    if memory_usage > threshold:
        log_alert(f"High memory usage detected: {memory_usage}% (Threshold: {threshold}%)")

def check_disk_space(threshold=80):
    disk = psutil.disk_usage('/')
    disk_usage = disk.percent
    if disk_usage > threshold:
        log_alert(f"Low disk space available: {disk_usage}% used (Threshold: {threshold}%)")

def check_running_processes(threshold=300):
    processes = len(psutil.pids())
    if processes > threshold:
        log_alert(f"High number of running processes: {processes} (Threshold: {threshold})")

def main():
    cpu_threshold = 80
    memory_threshold = 80
    disk_threshold = 80
    process_threshold = 300

    while True:
        print(f"\nChecking system health at {datetime.now()}...")
        check_cpu_usage(cpu_threshold)
        check_memory_usage(memory_threshold)
        check_disk_space(disk_threshold)
        check_running_processes(process_threshold)
        print("Check complete. Logs updated if any thresholds were exceeded.")
        
        time.sleep(60)

if __name__ == "__main__":
    main()
